@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime;

<PageTitle>Home</PageTitle>

<h1>Cookie Demo!</h1>
<p>
    This is a demo of how to use cookies in Blazor.
    The JavaScript functions are defined in the <code>wwwroot/js/cookie.js</code> file. 
</p>

<input type="text" class="form-control" placeholder="Enter cookie value" @bind="inputValue" />
<button class="btn btn-primary" @onclick="WriteCookies">
    Write Cookie
</button>
<button class="btn btn-primary" @onclick="ReadCookies">
    Read Cookie
</button>

<p>The cookie is @myCookieValue</p>

<script src="js/CookieUtilities.js"></script>

@code {
    private string inputValue = "";
    public string myCookieValue { get; set; } = "";
    protected async Task WriteCookies()
    {
        //await JsRuntime.InvokeAsync<object>("WriteCookie", "StaffInfoCookie", this.inputValue, DateTime.Now.AddMinutes(1));    // This is what Rob had
        await JsRuntime.InvokeAsync<object>("WriteCookie", "StaffInfoCookie", this.inputValue, 366);    // Set cookie to expire 366 days, which we have at work
    }
    protected async Task ReadCookies()
    {
        myCookieValue = await JsRuntime.InvokeAsync<string>("ReadCookie", "StaffInfoCookie");
    }
}